# -*- coding: utf-8 -*-
"""GRE Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jbp72V_6NEnHEaHdw5Mw3RHGwOwPf8q4
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import pickle
import matplotlib.pyplot as plt
# %matplotlib inline

a=pd.read_csv("/content/Admission_Prediction (2).csv")

a.head()

a.shape

a.info()

a.isnull().sum()

a["GRE Score"].mode()

a["GRE Score"].fillna(a["GRE Score"].mode()[0],inplace=True)

a["GRE Score"].mode()

a.isnull().sum()

a["TOEFL Score"].fillna(a["TOEFL Score"].mode()[0],inplace=True)

a["University Rating"].fillna(a["University Rating"].mean(),inplace=True)

a

a.isnull().sum()

x=a.drop(["Chance of Admit","Serial No."],axis=1)

y=a["Chance of Admit"]

x

y.head()

for i in x.columns:
    if(i != ["Chance Of Admit"]):
        plt.scatter(x[i],y)
        plt.xlabel(i)
        plt.ylabel("ds")
        plt.show()

from sklearn.preprocessing import StandardScaler

scaler_feature=StandardScaler()

scaler_label=StandardScaler()

scaled_data=scaler_feature.fit_transform(x)

scaled_data

from sklearn.model_selection import train_test_split

train_x,test_x,train_y,test_y=train_test_split(x,y,test_size=0.33,random_state=100)

#fitting the data into linear regression
from sklearn.linear_model import LinearRegression

reg=LinearRegression()

reg.fit(train_x,train_y)

from sklearn.metrics import r2_score

score=r2_score(reg.predict(test_x),test_y)

score

reg.predict(test_x)

import pickle

filename="first_model.pickle"
pickle.dump(reg,open(filename,"wb"))

load_model=pickle.load(open(filename,"rb"))

a=load_model.predict([[300,110,5,5,5,10,1]])

a

reg.predict([[330,110,5,4,5,10,0]])

from sklearn.linear_model import Ridge

rd=Ridge()

from sklearn.model_selection import GridSearchCV

parameters={"alpha":[1e-3,3,4,6,7,8,6,100,200]}

a=GridSearchCV(rd,parameters,scoring="neg_mean_squared_error",cv=5)

a

a.fit(train_x,train_y)

a.predict(test_x)